{"version":3,"sources":["components/navigations.module.css","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/authorization/authorization-operations.js","redux/authorization/authorization-slice.js","redux/store.js","components/Navigation.js","redux/authorization/authorization-selectors.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","redux/phonebook/phonebook-operations.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","redux/phonebook/phonebook-selectors.js","views/ContactsView.js","views/LoginView.js","views/RegisterView.js","views/HomeView.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","inputChange","createAction","fatchContactsRequest","fatchContactsSuccess","fatchContactsError","setContactRequest","setContactSuccess","setContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","isLoading","createReducer","contactReducer","_","payload","state","filter","contacts","id","includes","inputValueReducer","error","combineReducers","inputValue","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","defaultModules","set","PNotifyMobile","alert","text","logIn","operations","logOut","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","rejectWithValue","get","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","authOperations","fulfilled","action","persistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Navigation","to","exact","className","s","link","activeClassName","activeLink","authSelectors","getIsLoggedIn","getUserName","UserMenu","dispatch","useDispatch","useSelector","type","onClick","AuthNav","AppBar","header","operati","fatchAllContacts","addContact","newcontact","then","catch","deleteContact","contactId","delete","Form","submit","useState","setName","number","setNumber","reset","handleInputChange","e","currentTarget","value","onSubmit","shortid","generate","preventDefault","form","label","input","onChange","pattern","title","required","button","Filter","filterInput","filterValue","Contact","contact","item","Contacts","list","map","contactid","getcontacts","getinputValue","selectors","getVisibleContacts","length","normalizedFilter","toLowerCase","connect","phonebookSelectors","visibleContacts","event","useEffect","find","LoginView","setEmail","password","setPassword","handleChange","target","autoComplete","RegisterView","HomeView","role","Container","children","container","App","path","component","ContactsView","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6aa2765a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"navigations_header__TbL9n\",\"link\":\"navigations_link__3aL-3\",\"activeLink\":\"navigations_activeLink__1VNrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2yKnm\",\"label\":\"Form_label__3It9g\",\"input\":\"Form_input__1l24n\",\"button\":\"Form_button__3VAW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2YQbe\",\"item\":\"Contacts_item__1lWe3\",\"button\":\"Contacts_button__7fcXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3KwoH\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const inputChange = createAction(\"contact/inputChange\");\n\nexport const fatchContactsRequest = createAction(\n  \"contact/fatchContactsRequest\"\n);\nexport const fatchContactsSuccess = createAction(\n  \"contact/fatchContactsSuccess\"\n);\nexport const fatchContactsError = createAction(\"contact/fatchContactsError\");\n\nexport const setContactRequest = createAction(\"contact/setContactsRequest\");\nexport const setContactSuccess = createAction(\"contact/setContactsSucces\");\nexport const setContactError = createAction(\"contact/setContactsError\");\n\nexport const deleteContactRequest = createAction(\n  \"contact/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contact/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contact/deleteContactError\");\n\n// const actions = {\n//   handleSubmit,\n//   deleteContact,\n//   inputChange,\n//   fatchContactsRequest,\n//   fatchContactsSuccess,\n//   fatchContactsError,\n//   setContactRequest,\n//   setContactSuccess,\n//   setContactError,\n// };\n// export default actions;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  inputChange,\n  fatchContactsRequest,\n  fatchContactsSuccess,\n  fatchContactsError,\n  setContactRequest,\n  setContactSuccess,\n  setContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\nconst isLoading = createReducer(false, {\n  [fatchContactsRequest]: () => true,\n  [fatchContactsSuccess]: () => false,\n  [fatchContactsError]: () => false,\n  [setContactRequest]: () => true,\n  [setContactSuccess]: () => false,\n  [setContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst contactReducer = createReducer([], {\n  [fatchContactsSuccess]: (_, { payload }) => payload,\n  [setContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contacts) => !contacts.id.includes(payload)),\n});\n\nconst inputValueReducer = createReducer(\"\", {\n  [inputChange]: (_, { payload }) => payload,\n});\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts: contactReducer,\n  inputValue: inputValueReducer,\n  isLoading,\n  error,\n});\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { alert, defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    defaultModules.set(PNotifyMobile, {});\n    alert({\n      text: `Не удалось зарегистрироваться`,\n    });\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    defaultModules.set(PNotifyMobile, {});\n    alert({\n      text: `Не удалось авторизироваться`,\n    });\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    defaultModules.set(PNotifyMobile, {});\n    alert({\n      text: `Не удалось выйти из учетной записи, текст ошибки ${error}`,\n    });\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `Не удалось получить данные пользователя`,\n      });\n    }\n  }\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./authorization-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\nimport authReducer from \"./authorization/authorization-slice\";\n\nconst persistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./navigations.module.css\";\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\n      Главная\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Контакты\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\nconst getUserName = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n};\nexport default authSelectors;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/authorization/authorization-selectors\";\nimport authOperations from \"../../redux/authorization/authorization-operations\";\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div>\n      <span>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./navigations.module.css\";\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/authorization/authorization-selectors\";\nimport s from \"./navigations.module.css\";\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header>\n      <Navigation className={s.header} />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import {\n  fatchContactsRequest,\n  fatchContactsSuccess,\n  fatchContactsError,\n  setContactRequest,\n  setContactSuccess,\n  setContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst fatchAllContacts = () => async (dispatch) => {\n  dispatch(fatchContactsRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fatchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fatchContactsError(error));\n  }\n};\n\nconst addContact = (newcontact) => (dispatch) => {\n  dispatch(setContactRequest());\n  axios\n    .post(\"/contacts\", newcontact)\n    .then(({ data }) => dispatch(setContactSuccess(data)))\n    .catch((error) => dispatch(setContactError(error)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nconst operati = {\n  fatchAllContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default operati;\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./Form.module.css\";\n\nexport default function Form({ submit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const formsubmit = (e) => {\n    const id = shortid.generate();\n    e.preventDefault();\n    reset();\n    submit({ name: name, number: number, id: id });\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={formsubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Submit\n      </button>\n    </form>\n  );\n}\n","export default function Filter({ filterInput, filterValue }) {\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={filterInput}\n      ></input>\n    </label>\n  );\n}\n","import s from \"./Contacts.module.css\";\n\nexport default function Contact({ contact, deleteContact }) {\n  return (\n    <li className={s.item}>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button\n        type=\"button\"\n        className={s.button}\n        id={contact.id}\n        onClick={() => deleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import Contact from \"./Contact\";\nimport shortid from \"shortid\";\nimport s from \"./Contacts.module.css\";\n\nexport default function Contacts({ contacts, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => {\n        let contactid = shortid.generate();\n        return (\n          <Contact\n            key={contactid}\n            contact={contact}\n            deleteContact={deleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","const getcontacts = (state) => state.contacts.contacts;\nconst getinputValue = (state) => state.contacts.inputValue;\nconst getVisibleContacts = (state) => {\n  const inputValue = getinputValue(state);\n  const contacts = getcontacts(state);\n  if (contacts.length === 0) {\n    return;\n  } else {\n    const normalizedFilter = inputValue.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n};\n\nconst selectors = { getcontacts, getinputValue, getVisibleContacts };\n\nexport default selectors;\n","import { alert, defaultModules } from \"@pnotify/core\";\nimport { useEffect } from \"react\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { inputChange } from \"../redux/phonebook/phonebook-actions\";\nimport operations from \"../redux/phonebook/phonebook-operations\";\n\nimport Form from \"../components/Form/Form\";\nimport Filter from \"../components/Filter/Filter\";\nimport Contacts from \"../components/Contacts/Contacts\";\nimport phonebookSelectors from \"../redux/phonebook/phonebook-selectors\";\nimport authSelectors from \"../redux/authorization/authorization-selectors\";\n\nimport \"../App.css\";\n\nfunction ContactsView({ contacts, inputValue, visibleContacts, inputChange }) {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      dispatch(operations.fatchAllContacts());\n    } else {\n      return;\n    }\n  }, [dispatch, isLoggedIn]);\n\n  // useEffect(() => {\n  //   if (contacts.length === 0) {\n  //     return;\n  //   } else {\n  //      operations.fatchAllContacts()\n  //   }\n  // }, [contacts]);\n\n  const submit = (data) => {\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `${data.name} is olready in contacts`,\n      });\n    } else {\n      dispatch(operations.addContact(data));\n      dispatch(operations.fatchAllContacts());\n    }\n  };\n\n  const deleteContactfromServer = (id) => {\n    dispatch(operations.deleteContact(id));\n    dispatch(operations.fatchAllContacts());\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form submit={submit} />\n      <h2>Contacts</h2>\n      {contacts.length === 0 ? null : (\n        <Filter filterInput={inputChange} filterValue={inputValue} />\n      )}\n      {contacts.length === 0 ? (\n        <p>No Contacts</p>\n      ) : (\n        <Contacts\n          contacts={visibleContacts}\n          deleteContact={deleteContactfromServer}\n        />\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: phonebookSelectors.getcontacts(state),\n  inputValue: phonebookSelectors.getinputValue(state),\n  visibleContacts: phonebookSelectors.getVisibleContacts(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  inputChange: (event) => dispatch(inputChange(event.currentTarget.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../redux/authorization/authorization-operations\";\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <h1>Авторизируйся</h1>\n\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../redux/authorization/authorization-operations\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <h1>Присоединяйся к нам</h1>\n\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst HomeView = () => (\n  <div>\n    <h1>\n      Добро пожаловать в твой PhoneBook\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import s from \"./Container.module.css\";\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AppBar from \"./components/AppBar\";\nimport ContactsView from \"./views/ContactsView\";\nimport LoginView from \"./views/LoginView\";\nimport RegisterView from \"./views/RegisterView\";\nimport HomeView from \"./views/HomeView\";\nimport Container from \"./components/Container/Container\";\nimport authOperations from \"./redux/authorization/authorization-operations\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/register\" component={RegisterView} />\n        <Route path=\"/login\" component={LoginView} />\n        <Route path=\"/contacts\" component={ContactsView} />\n      </Switch>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}